import{M as v}from"./Menu-BwrQSYMS.js";import{_ as k,bI as f,bL as y,bW as $,bT as C,bX as P,bY as w,bN as g,bR as D,r as d,a as T,b as t,d as a,bB as m,o as A,Y as c,t as u}from"./index-9t_Zu7tB.js";import{P as B}from"./bootstrap.esm-B848_XlO.js";import{a as b}from"./index-C-z09IKS.js";f.add(y,$,C);const I={name:"ManageExistingDatasets",mixins:[P],...w,data(){return{currentPopover:null}},components:{FontAwesomeIcon:g,Menu:v,"table-listing":D},methods:{async deleteDataset(e){await this.$fusekiService.deleteDataset(e),b(this,`Dataset ${e} deleted`),this.initializeData()},async backupDataset(e){const l=(await this.$fusekiService.backupDataset(e)).data.taskId;b(this,`Backup task ${l} scheduled. Click on tasks for more.`),this.initializeData()},hidePopover(){this.currentPopover.hide(),this.currentPopover=null},showPopover(e){if(this.currentPopover!==null){if(this.currentPopover.__id===e)return;this.hidePopover()}const i={html:!0,content:this.$refs[`${e}-content`],trigger:"manual",placement:"auto"},l=this.$refs[`${e}-button`];this.currentPopover=new B(l,i),this.currentPopover.__id=e,this.currentPopover.show()}}},M={class:"container-fluid"},N={class:"row mt-4"},q={class:"col-12"},x=t("h2",null,"Manage datasets",-1),E={class:"card"},F={class:"card-header"},S={class:"card-body"},V={class:"row"},z={class:"col"},L=["onClick"],Y=t("span",{class:"ms-1"},"query",-1),G={class:"popover",role:"popover",hidden:""},O=t("div",null," Confirm ",-1),R={class:"text-center"},W={class:"alert alert-danger"},X=t("br",null,null,-1),j=t("br",null,null,-1),H=["onClick"],J=["id","onClick"],K=t("span",{class:"ms-1"},"remove",-1),Q={class:"popover",role:"popover",hidden:""},U=t("div",null," Confirm ",-1),Z={class:"text-center"},tt={class:"alert alert-danger"},et=t("br",null,null,-1),st=t("br",null,null,-1),ot=["onClick"],nt=["id","onClick"],at=t("span",{class:"ms-1"},"backup",-1),it=["onClick"],ct=t("span",{class:"ms-1"},"add data",-1),rt=["onClick"],lt=t("span",{class:"ms-1"},"info",-1);function dt(e,i,l,mt,ut,o){const p=d("Menu"),_=d("router-link"),r=d("FontAwesomeIcon"),h=d("table-listing");return A(),T("div",M,[t("div",N,[t("div",q,[x,t("div",E,[t("nav",F,[a(p)]),t("div",S,[t("div",null,[t("div",V,[t("div",z,[a(h,{fields:e.fields,items:e.items,"is-busy":e.isBusy},{empty:m(()=>[t("h4",null,[c(" No datasets created - "),a(_,{to:"/manage/new"},{default:m(()=>[c(" add one ")]),_:1})])]),"cell(actions)":m(s=>[t("button",{onClick:n=>e.$router.push(`/dataset${s.item.name}/query`),type:"button",class:"btn btn-primary me-0 me-md-2 mb-2 mb-md-0 d-block d-md-inline-block dataset-query"},[a(r,{icon:"question-circle"}),Y],8,L),t("div",G,[t("div",{ref:`delete-dataset-${s.item.name}-content`},[O,t("div",R,[t("div",W,[c(" Are you sure you want to delete dataset "+u(s.item.name)+"?",1),X,j,c("This action cannot be reversed. ")]),t("button",{onClick:n=>{o.hidePopover(),o.deleteDataset(s.item.name)},class:"btn btn-primary me-2"}," submit ",8,H),t("button",{onClick:i[0]||(i[0]=n=>o.hidePopover()),type:"button",class:"btn btn-secondary"}," cancel ")])],512)]),t("button",{id:`delete-dataset-${s.item.name}-button`,ref:`delete-dataset-${s.item.name}-button`,onClick:n=>o.showPopover(`delete-dataset-${s.item.name}`),type:"button",href:"#",class:"btn btn-primary me-0 me-md-2 mb-2 mb-md-0 d-block d-md-inline-block dataset-remove"},[a(r,{icon:"times-circle"}),K],8,J),t("div",Q,[t("div",{ref:`backup-dataset-${s.item.name}-content`},[U,t("div",Z,[t("div",tt,[c(" Are you sure you want to create a backup of dataset "+u(s.item.name)+"?",1),et,st,c("This action may take some time to complete. ")]),t("button",{onClick:n=>{o.hidePopover(),o.backupDataset(s.item.name)},type:"button",class:"btn btn-primary me-2"}," submit ",8,ot),t("button",{onClick:i[1]||(i[1]=n=>o.hidePopover()),type:"button",class:"btn btn-secondary"}," cancel ")])],512)]),t("button",{id:`backup-dataset-${s.item.name}-button`,ref:`backup-dataset-${s.item.name}-button`,onClick:n=>o.showPopover(`backup-dataset-${s.item.name}`),type:"button",href:"#",class:"btn btn-primary me-0 me-md-2 me-0 mb-2 mb-md-0 d-block d-md-inline-block dataset-backup"},[a(r,{icon:"download"}),at],8,nt),t("button",{onClick:n=>e.$router.push(`/dataset${s.item.name}/upload`),type:"button",class:"btn btn-primary me-0 me-md-2 me-0 mb-2 mb-md-0 d-block d-md-inline-block dataset-add-data"},[a(r,{icon:"upload"}),ct],8,it),t("button",{onClick:n=>e.$router.push(`/dataset${s.item.name}/info`),type:"button",class:"btn btn-primary me-0 mb-md-0 d-block d-md-inline-block dataset-info"},[a(r,{icon:"tachometer-alt"}),lt],8,rt)]),_:1},8,["fields","items","is-busy"])])])])])])])])])}const vt=k(I,[["render",dt]]);export{vt as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
